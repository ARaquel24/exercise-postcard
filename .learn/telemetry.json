{"telemetry_id":"a1lbwlzt6wczhrpt","slug":"exercise-postcard","agent":"vscode","tutorial_started_at":1719865689957,"steps":[{"slug":"00-welcome","position":0,"files":[{"path":".learn/exercises/00-welcome/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/00-welcome/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false},{"slug":"01-design","position":1,"files":[{"path":".learn/exercises/01-design/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/01-design/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719876385631,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T23:26:25.631Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1719865714935,"completed_at":1719865720653},{"slug":"02-create-index","position":2,"files":[{"path":".learn/exercises/02-create-index/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/02-create-index/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/02-create-index/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1719865805282,"ended_at":1719865808472,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719865720653,"completed_at":1719865808473},{"slug":"03-add-first-html","position":3,"files":[{"path":".learn/exercises/03-add-first-html/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/03-add-first-html/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719866274176,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:37:54.176Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1719865816276,"completed_at":1719866228112},{"slug":"04-build-the-website","position":4,"files":[{"path":".learn/exercises/04-build-the-website/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/04-build-the-website/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719866310936,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:38:30.936Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1719866279950,"completed_at":1719866315135},{"slug":"05-how-to-start","position":5,"files":[{"path":".learn/exercises/05-how-to-start/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05-how-to-start/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1719866315135,"completed_at":1719866723141},{"slug":"06-lets-start-building","position":6,"files":[{"path":".learn/exercises/06-lets-start-building/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/06-lets-start-building/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/06-lets-start-building/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1719866780686,"ended_at":1719866782258,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719866723141,"completed_at":1719866782258},{"slug":"07-the-first-div","position":7,"files":[{"path":".learn/exercises/07-the-first-div/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/07-the-first-div/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/07-the-first-div/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1719866920018,"ended_at":1719866921950,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719866804486,"completed_at":1719866921950},{"slug":"08-adding-styles","position":8,"files":[{"path":".learn/exercises/08-adding-styles/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/08-adding-styles/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/08-adding-styles/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719866951287,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:49:11.287Z","exit_code":0},{"starting_at":1719867033724,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:50:33.724Z","exit_code":0},{"starting_at":1719867059630,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:50:59.630Z","exit_code":0}],"tests":[{"starting_at":1719867049886,"ended_at":1719867051384,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719866938787,"completed_at":1719867051384},{"slug":"08.1-red-borders","position":9,"files":[{"path":".learn/exercises/08.1-red-borders/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/08.1-red-borders/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/08.1-red-borders/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719867115667,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:51:55.667Z","exit_code":0}],"tests":[{"starting_at":1719867121260,"ended_at":1719867122797,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719867065086,"completed_at":1719867122797},{"slug":"09-connecting-stylesheet","position":10,"files":[{"path":".learn/exercises/09-connecting-stylesheet/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/09-connecting-stylesheet/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/09-connecting-stylesheet/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719867179915,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:52:59.915Z","exit_code":0},{"starting_at":1719867190632,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:53:10.632Z","exit_code":0}],"tests":[{"starting_at":1719867175393,"ended_at":1719867176991,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719867131795,"completed_at":1719867176991},{"slug":"10-center-postcard","position":11,"files":[{"path":".learn/exercises/10-center-postcard/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/10-center-postcard/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/10-center-postcard/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719867400006,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:56:40.006Z","exit_code":0},{"starting_at":1719867402585,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T20:56:42.585Z","exit_code":0}],"tests":[{"starting_at":1719867434745,"ended_at":1719867436391,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719867194503,"completed_at":1719867436391},{"slug":"11-postcard-divisions","position":12,"files":[{"path":".learn/exercises/11-postcard-divisions/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/11-postcard-divisions/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/11-postcard-divisions/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1719867571883,"ended_at":1719867573550,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719867454351,"completed_at":1719867573550},{"slug":"11.1-header-content","position":13,"files":[{"path":".learn/exercises/11.1-header-content/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/11.1-header-content/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/11.1-header-content/solution.hide.css","name":"solution.hide.css","hidden":true},{"path":".learn/exercises/11.1-header-content/solution.hide.html","name":"solution.hide.html","hidden":true},{"path":".learn/exercises/11.1-header-content/test.js","name":"test.js","hidden":true}],"ai_interactions":[{"starting_at":1719867725692,"student_message":"como hago para colocar el link de la imagen\n","context":"File: README.es.md\nContent: `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¿A quién no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente fácil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¡ella/él se va a sentir orgullosa/o! :)\n\n## 🌱  ¿Cómo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como última opción puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**👉 Sigue las siguientes instrucciones sobre** [cómo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> Éste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ✋ Aquí tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¿Qué hacer si estás atascado?\n\nHay un video sobre este ejercicio, míralo si estás perdido. Pero no copies todo, trata de colocar tu propio código.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura básica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro Sánchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce más sobre nuestros [Cursos de Programación](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\nFile: README.md\nContent: `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## 🌱  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**👉 Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ✋ Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro Sánchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\nFile: solution.hide.css\nContent: `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\nFile: solution.hide.html\nContent: `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\nFile: test.js\nContent: `const fs = require(\"fs\");\nconst path = require(\"path\");\nconst { fromFile, fromHTML } = require(\"../../utils/dom\");\nlet dom = fromFile();\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure you created the styles.css file\", function(){\n    const indexExists = fs.existsSync(`./styles.css`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure your index.html contains the <link> tag\", function(){\n    const content = fs.readFileSync(\"./index.html\", 'utf8')\n    document.documentElement.innerHTML = content.toString();\n    const linkTag = _document.querySelector(\"link\")\n    expect(linkTag).not.toBe(null);\n})\n\ntest(\"Create an image inside the .postcard-header <div>\", function(){\n    const e=dom.querySelector('.postcard-header').inside().querySelector('img')\n    expect(e).toBeTruthy();\n})\n\ntest(\"Create an <h1> inside the .postcard-header <div>\", function(){\n    dom = fromFile();\n    const e=dom.querySelector('.postcard-header').inside().querySelector('h1')\n    expect(e).toBeTruthy();\n})\n\ntest(\"The <h1> inside .postcard-header should say 'My Postcard'\", function(){\n    dom = fromFile();\n    const e =dom.querySelector('.postcard-header').inside().querySelector('h1')\n    expect(e.innerHTML.toLowerCase()).toEqual(\"My Postcard\".toLowerCase());\n})\n\ntest(\"The <img> tag should contain the given URL as src, E.g: <img src='the_image_src_goes_here' />\", function(){\n    dom = fromFile();\n    const e =dom.querySelector('.postcard-header').inside().querySelector('img')\n    expect(e.src).toEqual('https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png');\n})\n`\nThis is the current exercise instructions:\n      ---\n      # `11.1` Header Content\n\nAhora vamos a comenzar a llenar los `<div>` que hemos creado, empezando por el que tiene la clase `.postcard-header`.\n\nEn el diseño que debemos realizar, el `postcard-header` tiene un título a la izquierda y una imagen a la derecha.\n\n¿Qué `<tags>` HTML crees que debemos utilizar para representar un título y una imagen? 🤔\n\n## 📝 Instrucciones:\n\n1. Agrega un tag `<h1>` dentro del contenido de `.postcard-header`, cuyo texto debe ser **\"My Postcard\"** (asegúrate de que el **h1** contenga el título deseado para el postcard).\n\n2. Agrega un tag `<img>` dentro del mismo `<div>`. La **imagen** y el **h1** deben ser hermanos (hijos inmediatos del `.postcard-header`)\n\n3. Haz que la imagen tenga este URL:\n\n```txt\nhttps://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\n```\n\n## Resultado Esperado:\n\n- Si le haces `build` a tu página, debería verse así:\n\n  ![Header Content Preview](../../assets/header-content.png?raw=true)\n\n\n## 💡 Pista:\n\n- No olvides que el **fondo negro** y el **borde rojo** solo son guías temporales para diferenciar mejor nuestros componentes, no te concentres en ellos, serán removidos al final.\n\n      ---\nSome tests didn't passed, these are the tests logs:   ● The <h1> inside .postcard-header should say 'My Postcard'\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"my postcard\"\n    Received: \"<strong>my postcard</strong>\"\n\n      35 |     dom = fromFile();\n      36 |     const e =dom.querySelector('.postcard-header').inside().querySelector('h1')\n    > 37 |     expect(e.innerHTML.toLowerCase()).toEqual(\"My Postcard\".toLowerCase());\n         |                                       ^\n      38 | })\n      39 |\n      40 | test(\"The <img> tag should contain the given URL as src, E.g: <img src='the_image_src_goes_here' />\", function(){\n\n      at Object.toEqual (.learn/exercises/11.1-header-content/test.js:37:39)\n\n  ● The <img> tag should contain the given URL as src, E.g: <img src='the_image_src_goes_here' />\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\"\n    Received: \"\"\n\n      41 |     dom = fromFile();\n      42 |     const e =dom.querySelector('.postcard-header').inside().querySelector('img')\n    > 43 |     expect(e.src).toEqual('https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png');\n         |                   ^\n      44 | })\n      45 |\n\n      at Object.toEqual (.learn/exercises/11.1-header-content/test.js:43:19)\n,\n\n   undefined \n\n     ✓ (done) 0. Make sure you have your index.html\n     ✓ (done) 1. Make sure you created the styles.css file\n     ✓ (done) 2. Make sure your index.html contains the <link> tag\n     ✓ (done) 3. Create an image inside the .postcard-header <div>\n     ✓ (done) 4. Create an <h1> inside the .postcard-header <div>\n     x (fail) 5. The <h1> inside .postcard-header should say 'My Postcard'\n     x (fail) 6. The <img> tag should contain the given URL as src, E.g: <img src='the_image_src_goes_here' /> \n\n","ending_at":1719867731844,"ai_response":"Para colocar el link de la imagen en el tag `<img>`, necesitas usar el atributo `src` dentro del tag. Aquí hay un ejemplo de cómo hacerlo:\n\n```html\n<img src=\"URL_DE_LA_IMAGEN\" alt=\"Descripción de la imagen\">\n```\n\nEn tu caso, la URL de la imagen es:\n\n```txt\nhttps://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\n```\n\nEntonces, el código HTML debería verse así:\n\n```html\n<img src=\"https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\" alt=\"4Geeks Logo\">\n```\n\nAsegúrate de que este tag `<img>` esté dentro del `<div>` con la clase `.postcard-header` y que sea hermano del tag `<h1>`.\n\n¿Podrías intentar agregar esto a tu código y verificar si los tests pasan?"},{"starting_at":1719867930982,"student_message":"porque tengo el error en el h1\n","context":"File: README.es.md\nContent: `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¿A quién no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente fácil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¡ella/él se va a sentir orgullosa/o! :)\n\n## 🌱  ¿Cómo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como última opción puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**👉 Sigue las siguientes instrucciones sobre** [cómo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> Éste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ✋ Aquí tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¿Qué hacer si estás atascado?\n\nHay un video sobre este ejercicio, míralo si estás perdido. Pero no copies todo, trata de colocar tu propio código.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura básica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro Sánchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce más sobre nuestros [Cursos de Programación](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\nFile: README.md\nContent: `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## 🌱  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**👉 Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ✋ Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro Sánchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\nFile: solution.hide.css\nContent: `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\nFile: solution.hide.html\nContent: `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\nFile: test.js\nContent: `const fs = require(\"fs\");\nconst path = require(\"path\");\nconst { fromFile, fromHTML } = require(\"../../utils/dom\");\nlet dom = fromFile();\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure you created the styles.css file\", function(){\n    const indexExists = fs.existsSync(`./styles.css`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure your index.html contains the <link> tag\", function(){\n    const content = fs.readFileSync(\"./index.html\", 'utf8')\n    document.documentElement.innerHTML = content.toString();\n    const linkTag = _document.querySelector(\"link\")\n    expect(linkTag).not.toBe(null);\n})\n\ntest(\"Create an image inside the .postcard-header <div>\", function(){\n    const e=dom.querySelector('.postcard-header').inside().querySelector('img')\n    expect(e).toBeTruthy();\n})\n\ntest(\"Create an <h1> inside the .postcard-header <div>\", function(){\n    dom = fromFile();\n    const e=dom.querySelector('.postcard-header').inside().querySelector('h1')\n    expect(e).toBeTruthy();\n})\n\ntest(\"The <h1> inside .postcard-header should say 'My Postcard'\", function(){\n    dom = fromFile();\n    const e =dom.querySelector('.postcard-header').inside().querySelector('h1')\n    expect(e.innerHTML.toLowerCase()).toEqual(\"My Postcard\".toLowerCase());\n})\n\ntest(\"The <img> tag should contain the given URL as src, E.g: <img src='the_image_src_goes_here' />\", function(){\n    dom = fromFile();\n    const e =dom.querySelector('.postcard-header').inside().querySelector('img')\n    expect(e.src).toEqual('https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png');\n})\n`\nThis is the current exercise instructions:\n      ---\n      # `11.1` Header Content\n\nAhora vamos a comenzar a llenar los `<div>` que hemos creado, empezando por el que tiene la clase `.postcard-header`.\n\nEn el diseño que debemos realizar, el `postcard-header` tiene un título a la izquierda y una imagen a la derecha.\n\n¿Qué `<tags>` HTML crees que debemos utilizar para representar un título y una imagen? 🤔\n\n## 📝 Instrucciones:\n\n1. Agrega un tag `<h1>` dentro del contenido de `.postcard-header`, cuyo texto debe ser **\"My Postcard\"** (asegúrate de que el **h1** contenga el título deseado para el postcard).\n\n2. Agrega un tag `<img>` dentro del mismo `<div>`. La **imagen** y el **h1** deben ser hermanos (hijos inmediatos del `.postcard-header`)\n\n3. Haz que la imagen tenga este URL:\n\n```txt\nhttps://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\n```\n\n## Resultado Esperado:\n\n- Si le haces `build` a tu página, debería verse así:\n\n  ![Header Content Preview](../../assets/header-content.png?raw=true)\n\n\n## 💡 Pista:\n\n- No olvides que el **fondo negro** y el **borde rojo** solo son guías temporales para diferenciar mejor nuestros componentes, no te concentres en ellos, serán removidos al final.\n\n      ---","ending_at":1719867937490,"ai_response":"Vamos a revisar algunos puntos clave para asegurarnos de que el `<h1>` esté correctamente implementado.\n\n1. **Ubicación del `<h1>`**: Asegúrate de que el `<h1>` esté dentro del `<div>` con la clase `.postcard-header`.\n\n2. **Texto del `<h1>`**: Verifica que el texto dentro del `<h1>` sea exactamente \"My Postcard\".\n\n3. **Estructura del HTML**: Asegúrate de que la estructura de tu HTML sea correcta y que no haya errores de sintaxis.\n\nAquí tienes un ejemplo de cómo debería verse tu código:\n\n```html\n<div class=\"postcard-header\">\n    <h1>My Postcard</h1>\n    <img src=\"https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\" alt=\"4Geeks Logo\">\n</div>\n```\n\n- [ ] ¿El `<h1>` está dentro del `<div>` con la clase `.postcard-header`?\n- [ ] ¿El texto dentro del `<h1>` es exactamente \"My Postcard\"?\n- [ ] ¿La estructura de tu HTML es correcta y no tiene errores de sintaxis?\n\n¿Podrías revisar estos puntos y decirme si encuentras alguna discrepancia?"}],"compilations":[{"starting_at":1719867865713,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:04:25.713Z","exit_code":0},{"starting_at":1719867992141,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:06:32.141Z","exit_code":0}],"tests":[{"starting_at":1719867723186,"ended_at":1719867724879,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbVRoZSA8aDE+IGluc2lkZSAucG9zdGNhcmQtaGVhZGVyIHNob3VsZCBzYXkgJ015IFBvc3RjYXJkJxtbMzltG1syMm0KCiAgICAbWzJtZXhwZWN0KBtbMjJtG1szMW1yZWNlaXZlZBtbMzltG1sybSkuG1syMm10b0VxdWFsG1sybSgbWzIybRtbMzJtZXhwZWN0ZWQbWzM5bRtbMm0pIC8vIGRlZXAgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybSJteSBwb3N0Y2FyZCIbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtIhtbN208c3Ryb25nPhtbMjdtbXkgcG9zdGNhcmQbWzdtPC9zdHJvbmc+G1syN20iG1szOW0KG1sybRtbMjJtChtbMm0gICAgICAzNSB8ICAgICBkb20gPSBmcm9tRmlsZSgpOxtbMjJtChtbMm0gICAgICAzNiB8ICAgICBjb25zdCBlID1kb20ucXVlcnlTZWxlY3RvcignLnBvc3RjYXJkLWhlYWRlcicpLmluc2lkZSgpLnF1ZXJ5U2VsZWN0b3IoJ2gxJykbWzIybQobWzJtICAgID4gMzcgfCAgICAgZXhwZWN0KGUuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCkpLnRvRXF1YWwoIk15IFBvc3RjYXJkIi50b0xvd2VyQ2FzZSgpKTsbWzIybQobWzJtICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF4bWzIybQobWzJtICAgICAgMzggfCB9KRtbMjJtChtbMm0gICAgICAzOSB8G1syMm0KG1sybSAgICAgIDQwIHwgdGVzdCgiVGhlIDxpbWc+IHRhZyBzaG91bGQgY29udGFpbiB0aGUgZ2l2ZW4gVVJMIGFzIHNyYywgRS5nOiA8aW1nIHNyYz0ndGhlX2ltYWdlX3NyY19nb2VzX2hlcmUnIC8+IiwgZnVuY3Rpb24oKXsbWzIybQobWzJtG1syMm0KG1sybSAgICAgIBtbMm1hdCBPYmplY3QudG9FcXVhbCAoG1syMm0bWzJtG1swbRtbMzZtLmxlYXJuL2V4ZXJjaXNlcy8xMS4xLWhlYWRlci1jb250ZW50L3Rlc3QuanMbWzM5bRtbMG0bWzJtOjM3OjM5KRtbMjJtG1sybRtbMjJtCgobWzFtG1szMW0gIBtbMW3il48gG1syMm0bWzFtVGhlIDxpbWc+IHRhZyBzaG91bGQgY29udGFpbiB0aGUgZ2l2ZW4gVVJMIGFzIHNyYywgRS5nOiA8aW1nIHNyYz0ndGhlX2ltYWdlX3NyY19nb2VzX2hlcmUnIC8+G1szOW0bWzIybQoKICAgIBtbMm1leHBlY3QoG1syMm0bWzMxbXJlY2VpdmVkG1szOW0bWzJtKS4bWzIybXRvRXF1YWwbWzJtKBtbMjJtG1szMm1leHBlY3RlZBtbMzltG1sybSkgLy8gZGVlcCBlcXVhbGl0eRtbMjJtCgogICAgRXhwZWN0ZWQ6IBtbMzJtImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9icmVhdGhlY28tZGUvZXhlcmNpc2UtcG9zdGNhcmQvZTYzYTc5MTY1MzBjYzg1MGJkOTJhYTFjMmUxOTE5MTgzN2ZiNWM4MC8ubGVhcm4vYXNzZXRzLzRnZWVrcy5wbmciG1szOW0KICAgIFJlY2VpdmVkOiAbWzMxbSIiG1szOW0KG1sybRtbMjJtChtbMm0gICAgICA0MSB8ICAgICBkb20gPSBmcm9tRmlsZSgpOxtbMjJtChtbMm0gICAgICA0MiB8ICAgICBjb25zdCBlID1kb20ucXVlcnlTZWxlY3RvcignLnBvc3RjYXJkLWhlYWRlcicpLmluc2lkZSgpLnF1ZXJ5U2VsZWN0b3IoJ2ltZycpG1syMm0KG1sybSAgICA+IDQzIHwgICAgIGV4cGVjdChlLnNyYykudG9FcXVhbCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2JyZWF0aGVjby1kZS9leGVyY2lzZS1wb3N0Y2FyZC9lNjNhNzkxNjUzMGNjODUwYmQ5MmFhMWMyZTE5MTkxODM3ZmI1YzgwLy5sZWFybi9hc3NldHMvNGdlZWtzLnBuZycpOxtbMjJtChtbMm0gICAgICAgICB8ICAgICAgICAgICAgICAgICAgIF4bWzIybQobWzJtICAgICAgNDQgfCB9KRtbMjJtChtbMm0gICAgICA0NSB8G1syMm0KG1sybRtbMjJtChtbMm0gICAgICAbWzJtYXQgT2JqZWN0LnRvRXF1YWwgKBtbMjJtG1sybRtbMG0bWzM2bS5sZWFybi9leGVyY2lzZXMvMTEuMS1oZWFkZXItY29udGVudC90ZXN0LmpzG1szOW0bWzBtG1sybTo0MzoxOSkbWzIybRtbMm0bWzIybQosCgogICB1bmRlZmluZWQgCgogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDAuIBtbMzdtTWFrZSBzdXJlIHlvdSBoYXZlIHlvdXIgaW5kZXguaHRtbBtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMS4gG1szN21NYWtlIHN1cmUgeW91IGNyZWF0ZWQgdGhlIHN0eWxlcy5jc3MgZmlsZRtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMi4gG1szN21NYWtlIHN1cmUgeW91ciBpbmRleC5odG1sIGNvbnRhaW5zIHRoZSA8bGluaz4gdGFnG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAzLiAbWzM3bUNyZWF0ZSBhbiBpbWFnZSBpbnNpZGUgdGhlIC5wb3N0Y2FyZC1oZWFkZXIgPGRpdj4bWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDQuIBtbMzdtQ3JlYXRlIGFuIDxoMT4gaW5zaWRlIHRoZSAucG9zdGNhcmQtaGVhZGVyIDxkaXY+G1szOW0KICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gNS4gG1szN21UaGUgPGgxPiBpbnNpZGUgLnBvc3RjYXJkLWhlYWRlciBzaG91bGQgc2F5ICdNeSBQb3N0Y2FyZCcbWzM5bQogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSA2LiAbWzM3bVRoZSA8aW1nPiB0YWcgc2hvdWxkIGNvbnRhaW4gdGhlIGdpdmVuIFVSTCBhcyBzcmMsIEUuZzogPGltZyBzcmM9J3RoZV9pbWFnZV9zcmNfZ29lc19oZXJlJyAvPhtbMzltIAoK","exit_code":1},{"starting_at":1719867791886,"ended_at":1719867793315,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbVRoZSA8aDE+IGluc2lkZSAucG9zdGNhcmQtaGVhZGVyIHNob3VsZCBzYXkgJ015IFBvc3RjYXJkJxtbMzltG1syMm0KCiAgICAbWzJtZXhwZWN0KBtbMjJtG1szMW1yZWNlaXZlZBtbMzltG1sybSkuG1syMm10b0VxdWFsG1sybSgbWzIybRtbMzJtZXhwZWN0ZWQbWzM5bRtbMm0pIC8vIGRlZXAgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybSJteSBwb3N0Y2FyZCIbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtIhtbN208c3Ryb25nPhtbMjdtbXkgcG9zdGNhcmQbWzdtPC9zdHJvbmc+G1syN20iG1szOW0KG1sybRtbMjJtChtbMm0gICAgICAzNSB8ICAgICBkb20gPSBmcm9tRmlsZSgpOxtbMjJtChtbMm0gICAgICAzNiB8ICAgICBjb25zdCBlID1kb20ucXVlcnlTZWxlY3RvcignLnBvc3RjYXJkLWhlYWRlcicpLmluc2lkZSgpLnF1ZXJ5U2VsZWN0b3IoJ2gxJykbWzIybQobWzJtICAgID4gMzcgfCAgICAgZXhwZWN0KGUuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCkpLnRvRXF1YWwoIk15IFBvc3RjYXJkIi50b0xvd2VyQ2FzZSgpKTsbWzIybQobWzJtICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF4bWzIybQobWzJtICAgICAgMzggfCB9KRtbMjJtChtbMm0gICAgICAzOSB8G1syMm0KG1sybSAgICAgIDQwIHwgdGVzdCgiVGhlIDxpbWc+IHRhZyBzaG91bGQgY29udGFpbiB0aGUgZ2l2ZW4gVVJMIGFzIHNyYywgRS5nOiA8aW1nIHNyYz0ndGhlX2ltYWdlX3NyY19nb2VzX2hlcmUnIC8+IiwgZnVuY3Rpb24oKXsbWzIybQobWzJtG1syMm0KG1sybSAgICAgIBtbMm1hdCBPYmplY3QudG9FcXVhbCAoG1syMm0bWzJtG1swbRtbMzZtLmxlYXJuL2V4ZXJjaXNlcy8xMS4xLWhlYWRlci1jb250ZW50L3Rlc3QuanMbWzM5bRtbMG0bWzJtOjM3OjM5KRtbMjJtG1sybRtbMjJtCiwKCiAgIHVuZGVmaW5lZCAKCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMC4gG1szN21NYWtlIHN1cmUgeW91IGhhdmUgeW91ciBpbmRleC5odG1sG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAxLiAbWzM3bU1ha2Ugc3VyZSB5b3UgY3JlYXRlZCB0aGUgc3R5bGVzLmNzcyBmaWxlG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAyLiAbWzM3bU1ha2Ugc3VyZSB5b3VyIGluZGV4Lmh0bWwgY29udGFpbnMgdGhlIDxsaW5rPiB0YWcbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDMuIBtbMzdtQ3JlYXRlIGFuIGltYWdlIGluc2lkZSB0aGUgLnBvc3RjYXJkLWhlYWRlciA8ZGl2PhtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gNC4gG1szN21DcmVhdGUgYW4gPGgxPiBpbnNpZGUgdGhlIC5wb3N0Y2FyZC1oZWFkZXIgPGRpdj4bWzM5bQogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSA1LiAbWzM3bVRoZSA8aDE+IGluc2lkZSAucG9zdGNhcmQtaGVhZGVyIHNob3VsZCBzYXkgJ015IFBvc3RjYXJkJxtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gNi4gG1szN21UaGUgPGltZz4gdGFnIHNob3VsZCBjb250YWluIHRoZSBnaXZlbiBVUkwgYXMgc3JjLCBFLmc6IDxpbWcgc3JjPSd0aGVfaW1hZ2Vfc3JjX2dvZXNfaGVyZScgLz4bWzM5bSAKCg==","exit_code":1},{"starting_at":1719867819847,"ended_at":1719867821338,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbVRoZSA8aDE+IGluc2lkZSAucG9zdGNhcmQtaGVhZGVyIHNob3VsZCBzYXkgJ015IFBvc3RjYXJkJxtbMzltG1syMm0KCiAgICAbWzJtZXhwZWN0KBtbMjJtG1szMW1yZWNlaXZlZBtbMzltG1sybSkuG1syMm10b0VxdWFsG1sybSgbWzIybRtbMzJtZXhwZWN0ZWQbWzM5bRtbMm0pIC8vIGRlZXAgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybSJteSBwb3N0Y2FyZCIbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtIhtbN208c3Ryb25nPlwiG1syN21teSBwb3N0Y2FyZBtbN21cIjwvc3Ryb25nPhtbMjdtIhtbMzltChtbMm0bWzIybQobWzJtICAgICAgMzUgfCAgICAgZG9tID0gZnJvbUZpbGUoKTsbWzIybQobWzJtICAgICAgMzYgfCAgICAgY29uc3QgZSA9ZG9tLnF1ZXJ5U2VsZWN0b3IoJy5wb3N0Y2FyZC1oZWFkZXInKS5pbnNpZGUoKS5xdWVyeVNlbGVjdG9yKCdoMScpG1syMm0KG1sybSAgICA+IDM3IHwgICAgIGV4cGVjdChlLmlubmVySFRNTC50b0xvd2VyQ2FzZSgpKS50b0VxdWFsKCJNeSBQb3N0Y2FyZCIudG9Mb3dlckNhc2UoKSk7G1syMm0KG1sybSAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBeG1syMm0KG1sybSAgICAgIDM4IHwgfSkbWzIybQobWzJtICAgICAgMzkgfBtbMjJtChtbMm0gICAgICA0MCB8IHRlc3QoIlRoZSA8aW1nPiB0YWcgc2hvdWxkIGNvbnRhaW4gdGhlIGdpdmVuIFVSTCBhcyBzcmMsIEUuZzogPGltZyBzcmM9J3RoZV9pbWFnZV9zcmNfZ29lc19oZXJlJyAvPiIsIGZ1bmN0aW9uKCl7G1syMm0KG1sybRtbMjJtChtbMm0gICAgICAbWzJtYXQgT2JqZWN0LnRvRXF1YWwgKBtbMjJtG1sybRtbMG0bWzM2bS5sZWFybi9leGVyY2lzZXMvMTEuMS1oZWFkZXItY29udGVudC90ZXN0LmpzG1szOW0bWzBtG1sybTozNzozOSkbWzIybRtbMm0bWzIybQosCgogICB1bmRlZmluZWQgCgogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDAuIBtbMzdtTWFrZSBzdXJlIHlvdSBoYXZlIHlvdXIgaW5kZXguaHRtbBtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMS4gG1szN21NYWtlIHN1cmUgeW91IGNyZWF0ZWQgdGhlIHN0eWxlcy5jc3MgZmlsZRtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMi4gG1szN21NYWtlIHN1cmUgeW91ciBpbmRleC5odG1sIGNvbnRhaW5zIHRoZSA8bGluaz4gdGFnG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAzLiAbWzM3bUNyZWF0ZSBhbiBpbWFnZSBpbnNpZGUgdGhlIC5wb3N0Y2FyZC1oZWFkZXIgPGRpdj4bWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDQuIBtbMzdtQ3JlYXRlIGFuIDxoMT4gaW5zaWRlIHRoZSAucG9zdGNhcmQtaGVhZGVyIDxkaXY+G1szOW0KICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gNS4gG1szN21UaGUgPGgxPiBpbnNpZGUgLnBvc3RjYXJkLWhlYWRlciBzaG91bGQgc2F5ICdNeSBQb3N0Y2FyZCcbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDYuIBtbMzdtVGhlIDxpbWc+IHRhZyBzaG91bGQgY29udGFpbiB0aGUgZ2l2ZW4gVVJMIGFzIHNyYywgRS5nOiA8aW1nIHNyYz0ndGhlX2ltYWdlX3NyY19nb2VzX2hlcmUnIC8+G1szOW0gCgo=","exit_code":1},{"starting_at":1719867839715,"ended_at":1719867841199,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbVRoZSA8aDE+IGluc2lkZSAucG9zdGNhcmQtaGVhZGVyIHNob3VsZCBzYXkgJ015IFBvc3RjYXJkJxtbMzltG1syMm0KCiAgICAbWzJtZXhwZWN0KBtbMjJtG1szMW1yZWNlaXZlZBtbMzltG1sybSkuG1syMm10b0VxdWFsG1sybSgbWzIybRtbMzJtZXhwZWN0ZWQbWzM5bRtbMm0pIC8vIGRlZXAgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybSJteSBwb3N0Y2FyZCIbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtIhtbN208c3Ryb25nPicbWzI3bW15IHBvc3RjYXJkG1s3bSc8L3N0cm9uZz4bWzI3bSIbWzM5bQobWzJtG1syMm0KG1sybSAgICAgIDM1IHwgICAgIGRvbSA9IGZyb21GaWxlKCk7G1syMm0KG1sybSAgICAgIDM2IHwgICAgIGNvbnN0IGUgPWRvbS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQtaGVhZGVyJykuaW5zaWRlKCkucXVlcnlTZWxlY3RvcignaDEnKRtbMjJtChtbMm0gICAgPiAzNyB8ICAgICBleHBlY3QoZS5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSkudG9FcXVhbCgiTXkgUG9zdGNhcmQiLnRvTG93ZXJDYXNlKCkpOxtbMjJtChtbMm0gICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXhtbMjJtChtbMm0gICAgICAzOCB8IH0pG1syMm0KG1sybSAgICAgIDM5IHwbWzIybQobWzJtICAgICAgNDAgfCB0ZXN0KCJUaGUgPGltZz4gdGFnIHNob3VsZCBjb250YWluIHRoZSBnaXZlbiBVUkwgYXMgc3JjLCBFLmc6IDxpbWcgc3JjPSd0aGVfaW1hZ2Vfc3JjX2dvZXNfaGVyZScgLz4iLCBmdW5jdGlvbigpextbMjJtChtbMm0bWzIybQobWzJtICAgICAgG1sybWF0IE9iamVjdC50b0VxdWFsICgbWzIybRtbMm0bWzBtG1szNm0ubGVhcm4vZXhlcmNpc2VzLzExLjEtaGVhZGVyLWNvbnRlbnQvdGVzdC5qcxtbMzltG1swbRtbMm06Mzc6MzkpG1syMm0bWzJtG1syMm0KLAoKICAgdW5kZWZpbmVkIAoKICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAwLiAbWzM3bU1ha2Ugc3VyZSB5b3UgaGF2ZSB5b3VyIGluZGV4Lmh0bWwbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDEuIBtbMzdtTWFrZSBzdXJlIHlvdSBjcmVhdGVkIHRoZSBzdHlsZXMuY3NzIGZpbGUbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDIuIBtbMzdtTWFrZSBzdXJlIHlvdXIgaW5kZXguaHRtbCBjb250YWlucyB0aGUgPGxpbms+IHRhZxtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMy4gG1szN21DcmVhdGUgYW4gaW1hZ2UgaW5zaWRlIHRoZSAucG9zdGNhcmQtaGVhZGVyIDxkaXY+G1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSA0LiAbWzM3bUNyZWF0ZSBhbiA8aDE+IGluc2lkZSB0aGUgLnBvc3RjYXJkLWhlYWRlciA8ZGl2PhtbMzltCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDUuIBtbMzdtVGhlIDxoMT4gaW5zaWRlIC5wb3N0Y2FyZC1oZWFkZXIgc2hvdWxkIHNheSAnTXkgUG9zdGNhcmQnG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSA2LiAbWzM3bVRoZSA8aW1nPiB0YWcgc2hvdWxkIGNvbnRhaW4gdGhlIGdpdmVuIFVSTCBhcyBzcmMsIEUuZzogPGltZyBzcmM9J3RoZV9pbWFnZV9zcmNfZ29lc19oZXJlJyAvPhtbMzltIAoK","exit_code":1},{"starting_at":1719867906609,"ended_at":1719867908088,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbVRoZSA8aDE+IGluc2lkZSAucG9zdGNhcmQtaGVhZGVyIHNob3VsZCBzYXkgJ015IFBvc3RjYXJkJxtbMzltG1syMm0KCiAgICAbWzJtZXhwZWN0KBtbMjJtG1szMW1yZWNlaXZlZBtbMzltG1sybSkuG1syMm10b0VxdWFsG1sybSgbWzIybRtbMzJtZXhwZWN0ZWQbWzM5bRtbMm0pIC8vIGRlZXAgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybSJteSBwb3N0Y2FyZCIbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtIhtbN208c3Ryb25nPicbWzI3bW15IHBvc3RjYXJkG1s3bSc8L3N0cm9uZz4bWzI3bSIbWzM5bQobWzJtG1syMm0KG1sybSAgICAgIDM1IHwgICAgIGRvbSA9IGZyb21GaWxlKCk7G1syMm0KG1sybSAgICAgIDM2IHwgICAgIGNvbnN0IGUgPWRvbS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQtaGVhZGVyJykuaW5zaWRlKCkucXVlcnlTZWxlY3RvcignaDEnKRtbMjJtChtbMm0gICAgPiAzNyB8ICAgICBleHBlY3QoZS5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSkudG9FcXVhbCgiTXkgUG9zdGNhcmQiLnRvTG93ZXJDYXNlKCkpOxtbMjJtChtbMm0gICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXhtbMjJtChtbMm0gICAgICAzOCB8IH0pG1syMm0KG1sybSAgICAgIDM5IHwbWzIybQobWzJtICAgICAgNDAgfCB0ZXN0KCJUaGUgPGltZz4gdGFnIHNob3VsZCBjb250YWluIHRoZSBnaXZlbiBVUkwgYXMgc3JjLCBFLmc6IDxpbWcgc3JjPSd0aGVfaW1hZ2Vfc3JjX2dvZXNfaGVyZScgLz4iLCBmdW5jdGlvbigpextbMjJtChtbMm0bWzIybQobWzJtICAgICAgG1sybWF0IE9iamVjdC50b0VxdWFsICgbWzIybRtbMm0bWzBtG1szNm0ubGVhcm4vZXhlcmNpc2VzLzExLjEtaGVhZGVyLWNvbnRlbnQvdGVzdC5qcxtbMzltG1swbRtbMm06Mzc6MzkpG1syMm0bWzJtG1syMm0KLAoKICAgdW5kZWZpbmVkIAoKICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAwLiAbWzM3bU1ha2Ugc3VyZSB5b3UgaGF2ZSB5b3VyIGluZGV4Lmh0bWwbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDEuIBtbMzdtTWFrZSBzdXJlIHlvdSBjcmVhdGVkIHRoZSBzdHlsZXMuY3NzIGZpbGUbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDIuIBtbMzdtTWFrZSBzdXJlIHlvdXIgaW5kZXguaHRtbCBjb250YWlucyB0aGUgPGxpbms+IHRhZxtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMy4gG1szN21DcmVhdGUgYW4gaW1hZ2UgaW5zaWRlIHRoZSAucG9zdGNhcmQtaGVhZGVyIDxkaXY+G1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSA0LiAbWzM3bUNyZWF0ZSBhbiA8aDE+IGluc2lkZSB0aGUgLnBvc3RjYXJkLWhlYWRlciA8ZGl2PhtbMzltCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDUuIBtbMzdtVGhlIDxoMT4gaW5zaWRlIC5wb3N0Y2FyZC1oZWFkZXIgc2hvdWxkIHNheSAnTXkgUG9zdGNhcmQnG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSA2LiAbWzM3bVRoZSA8aW1nPiB0YWcgc2hvdWxkIGNvbnRhaW4gdGhlIGdpdmVuIFVSTCBhcyBzcmMsIEUuZzogPGltZyBzcmM9J3RoZV9pbWFnZV9zcmNfZ29lc19oZXJlJyAvPhtbMzltIAoK","exit_code":1},{"starting_at":1719867973678,"ended_at":1719867975191,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbVRoZSA8aDE+IGluc2lkZSAucG9zdGNhcmQtaGVhZGVyIHNob3VsZCBzYXkgJ015IFBvc3RjYXJkJxtbMzltG1syMm0KCiAgICAbWzJtZXhwZWN0KBtbMjJtG1szMW1yZWNlaXZlZBtbMzltG1sybSkuG1syMm10b0VxdWFsG1sybSgbWzIybRtbMzJtZXhwZWN0ZWQbWzM5bRtbMm0pIC8vIGRlZXAgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybSJteSBwb3N0Y2FyZCIbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtIm15IHBvc3RjYXJkG1s3bScbWzI3bSIbWzM5bQobWzJtG1syMm0KG1sybSAgICAgIDM1IHwgICAgIGRvbSA9IGZyb21GaWxlKCk7G1syMm0KG1sybSAgICAgIDM2IHwgICAgIGNvbnN0IGUgPWRvbS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQtaGVhZGVyJykuaW5zaWRlKCkucXVlcnlTZWxlY3RvcignaDEnKRtbMjJtChtbMm0gICAgPiAzNyB8ICAgICBleHBlY3QoZS5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSkudG9FcXVhbCgiTXkgUG9zdGNhcmQiLnRvTG93ZXJDYXNlKCkpOxtbMjJtChtbMm0gICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXhtbMjJtChtbMm0gICAgICAzOCB8IH0pG1syMm0KG1sybSAgICAgIDM5IHwbWzIybQobWzJtICAgICAgNDAgfCB0ZXN0KCJUaGUgPGltZz4gdGFnIHNob3VsZCBjb250YWluIHRoZSBnaXZlbiBVUkwgYXMgc3JjLCBFLmc6IDxpbWcgc3JjPSd0aGVfaW1hZ2Vfc3JjX2dvZXNfaGVyZScgLz4iLCBmdW5jdGlvbigpextbMjJtChtbMm0bWzIybQobWzJtICAgICAgG1sybWF0IE9iamVjdC50b0VxdWFsICgbWzIybRtbMm0bWzBtG1szNm0ubGVhcm4vZXhlcmNpc2VzLzExLjEtaGVhZGVyLWNvbnRlbnQvdGVzdC5qcxtbMzltG1swbRtbMm06Mzc6MzkpG1syMm0bWzJtG1syMm0KLAoKICAgdW5kZWZpbmVkIAoKICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAwLiAbWzM3bU1ha2Ugc3VyZSB5b3UgaGF2ZSB5b3VyIGluZGV4Lmh0bWwbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDEuIBtbMzdtTWFrZSBzdXJlIHlvdSBjcmVhdGVkIHRoZSBzdHlsZXMuY3NzIGZpbGUbWzM5bQogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDIuIBtbMzdtTWFrZSBzdXJlIHlvdXIgaW5kZXguaHRtbCBjb250YWlucyB0aGUgPGxpbms+IHRhZxtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMy4gG1szN21DcmVhdGUgYW4gaW1hZ2UgaW5zaWRlIHRoZSAucG9zdGNhcmQtaGVhZGVyIDxkaXY+G1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSA0LiAbWzM3bUNyZWF0ZSBhbiA8aDE+IGluc2lkZSB0aGUgLnBvc3RjYXJkLWhlYWRlciA8ZGl2PhtbMzltCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDUuIBtbMzdtVGhlIDxoMT4gaW5zaWRlIC5wb3N0Y2FyZC1oZWFkZXIgc2hvdWxkIHNheSAnTXkgUG9zdGNhcmQnG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSA2LiAbWzM3bVRoZSA8aW1nPiB0YWcgc2hvdWxkIGNvbnRhaW4gdGhlIGdpdmVuIFVSTCBhcyBzcmMsIEUuZzogPGltZyBzcmM9J3RoZV9pbWFnZV9zcmNfZ29lc19oZXJlJyAvPhtbMzltIAoK","exit_code":1},{"starting_at":1719867984201,"ended_at":1719867985682,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719867577009,"completed_at":1719867985682},{"slug":"11.2-header-styles","position":14,"files":[{"path":".learn/exercises/11.2-header-styles/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/11.2-header-styles/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/11.2-header-styles/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719868098396,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:08:18.396Z","exit_code":0},{"starting_at":1719868122206,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:08:42.206Z","exit_code":0},{"starting_at":1719868137779,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:08:57.779Z","exit_code":0},{"starting_at":1719868169891,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:09:29.891Z","exit_code":0},{"starting_at":1719868211209,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:10:11.209Z","exit_code":0},{"starting_at":1719868213673,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:10:13.673Z","exit_code":0},{"starting_at":1719868224600,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:10:24.600Z","exit_code":0},{"starting_at":1719868245020,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:10:45.020Z","exit_code":0},{"starting_at":1719868261744,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:11:01.744Z","exit_code":0},{"starting_at":1719868272187,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:11:12.187Z","exit_code":0}],"tests":[{"starting_at":1719868278681,"ended_at":1719868280343,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719868006222,"completed_at":1719868280343},{"slug":"12-split-postcard-body","position":15,"files":[{"path":".learn/exercises/12-split-postcard-body/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/12-split-postcard-body/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/12-split-postcard-body/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719868495731,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:14:55.731Z","exit_code":0}],"tests":[{"starting_at":1719868509664,"ended_at":1719868511385,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719868293491,"completed_at":1719868511385},{"slug":"12.1-body-content","position":16,"files":[{"path":".learn/exercises/12.1-body-content/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/12.1-body-content/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/12.1-body-content/test.js","name":"test.js","hidden":true}],"ai_interactions":[{"starting_at":1719870257088,"student_message":"como se coloca los imput para texto\n","context":"File: README.es.md\nContent: `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¿A quién no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente fácil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¡ella/él se va a sentir orgullosa/o! :)\n\n## 🌱  ¿Cómo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como última opción puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**👉 Sigue las siguientes instrucciones sobre** [cómo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> Éste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ✋ Aquí tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¿Qué hacer si estás atascado?\n\nHay un video sobre este ejercicio, míralo si estás perdido. Pero no copies todo, trata de colocar tu propio código.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura básica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro Sánchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce más sobre nuestros [Cursos de Programación](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\nFile: README.md\nContent: `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## 🌱  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**👉 Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ✋ Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro Sánchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\nFile: test.js\nContent: `const fs = require(\"fs\");\nconst path = require(\"path\");\nconst { fromFile, fromHTML } = require(\"../../utils/dom\");\nlet dom = fromFile();\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure you created the styles.css file\", function(){\n    const indexExists = fs.existsSync(`./styles.css`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure your index.html contains the <link> tag\", function(){\n    const content = fs.readFileSync(\"./index.html\", 'utf8')\n    document.documentElement.innerHTML = content.toString();\n    const linkTag = _document.querySelector(\"link\")\n    expect(linkTag).not.toBe(null);\n})\n\ntest(\"Create a <div> inside the .postcard-body and add the class .body-left to it\", function(){\n    const e=dom.querySelector('.postcard-body').inside().querySelector('div.body-left')\n    expect(e).toBeTruthy();\n})\n\ntest(\"Create a <div> inside the .postcard-body and add the class .body-right to it\", function(){\n    dom = fromFile();\n    const e=dom.querySelector('.postcard-body').inside().querySelector('div.body-right')\n    expect(e).toBeTruthy();\n})\n\ntest(\"The .postcard-body CSS selector should have a display: flex\", function(){\n    dom = dom.withStylesheet();\n    dom.selector('.postcard-body').hasStyles({\n        display: \"flex\",\n    })\n})\n`\nThis is the current exercise instructions:\n      ---\n      # `12.1` Body Content\n\n¿Qué elementos deben estar en el `postcard-body`? ¿Puedes identificarlos de acuerdo a los `<tags>` ya mencionados?\n\n💻 Posibles opciones: Headings (h1, h2, h3, etc.), Párrafos, Imágenes, Divs, Inputs, Checkbox, etc.\n\n![Postcard body content](../../assets/12.1-body-content.gif)\n\nAhora debemos crear los tags HTML necesarios para terminar el contenido de tu `.postcard` y aplicar los estilos que faltan para que se parezca a la imagen.\n\n## 📝 Instrucciones:\n\n1. El primer `<p>` no necesita `margin-top` (margen superior), así que debes eliminarlo.\n\n```css\n.body-left p:first-child {\n\tmargin-top: x;\n}\n```\n\n2. El `.body-left` y `.body-right` deben tener un `padding` (relleno) para separar el texto del borde de las cajas. \n\n```css\n.body-left,\n.body-right {\n\tpadding: x;\n}\n```\n\n3. Los inputs (entradas) deben tener un `border-bottom` (borde de abajo) `grey` (gris), pero no deben tener bordes a los lados ni arriba, así que prueba con `border: none` y luego `border-bottom`.\n\n```css\ninput {\n\tborder: x;\n\tborder-bottom: x;\n}\n```\n\n4. Los párrafos pueden tener un `font-size` particular.\n\n## Resultado Esperado:\n\n+ Así debería verse tu sitio web:\n\n![Postcard body content](../../assets/12.1.png)\n\n## 💡 Pista:\n\n+ Piensa en el layout (diseño) de esos tags. Los inputs estarán uno sobre el otro.\n+ Esta increíble lectura te mostrará todo lo que necesitas saber sobre el tag `<input>` para completar con éxito el ejercicio https://www.w3schools.com/tags/tag_input.asp\n\n      ---\nThe tests passed succesfully, tell the user to pass to the next exercise and give him a congrats message: ✅ All tests passed successfully!","ending_at":1719870262780,"ai_response":"Para colocar inputs de texto en tu HTML, puedes usar la etiqueta `<input>` con el atributo `type=\"text\"`. Aquí tienes un ejemplo básico de cómo hacerlo:\n\n```html\n<div class=\"body-left\">\n    <input type=\"text\" placeholder=\"Escribe aquí...\">\n</div>\n```\n\nAhora, para que los inputs se vean como en la imagen de referencia, necesitarás aplicar algunos estilos CSS. Aquí hay algunas sugerencias basadas en las instrucciones:\n\n1. **Eliminar el margen superior del primer párrafo**:\n    ```css\n    .body-left p:first-child {\n        margin-top: 0;\n    }\n    ```\n\n2. **Agregar padding a `.body-left` y `.body-right`**:\n    ```css\n    .body-left,\n    .body-right {\n        padding: 20px; /* Ajusta el valor según sea necesario */\n    }\n    ```\n\n3. **Estilizar los inputs**:\n    ```css\n    input {\n        border: none;\n        border-bottom: 1px solid grey;\n        padding: 5px; /* Ajusta el valor según sea necesario */\n    }\n    ```\n\n4. **Ajustar el tamaño de fuente de los párrafos**:\n    ```css\n    p {\n        font-size: 16px; /* Ajusta el valor según sea necesario */\n    }\n    ```\n\nCon estos pasos, deberías poder crear y estilizar los inputs de texto en tu postal. ¿Hay algún aspecto específico que te gustaría explorar más a fondo?\n\n✅ All tests passed successfully!\n\n[//]: # (next)"}],"compilations":[{"starting_at":1719869926546,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:38:46.546Z","exit_code":0},{"starting_at":1719870009539,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:40:09.539Z","exit_code":0},{"starting_at":1719870022219,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:40:22.219Z","exit_code":0},{"starting_at":1719870047944,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:40:47.944Z","exit_code":0},{"starting_at":1719870116552,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:41:56.552Z","exit_code":0},{"starting_at":1719870150890,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:42:30.890Z","exit_code":0},{"starting_at":1719870191402,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:43:11.402Z","exit_code":0},{"starting_at":1719870206266,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:43:26.266Z","exit_code":0},{"starting_at":1719870216861,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:43:36.861Z","exit_code":0},{"starting_at":1719870590864,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:49:50.864Z","exit_code":0},{"starting_at":1719870603585,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:50:03.585Z","exit_code":0},{"starting_at":1719870618693,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:50:18.693Z","exit_code":0},{"starting_at":1719870698450,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:51:38.450Z","exit_code":0}],"tests":[{"starting_at":1719870255001,"ended_at":1719870256767,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0},{"starting_at":1719870718505,"ended_at":1719870719997,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1719868520020,"completed_at":1719870719997},{"slug":"13-check-your-code","position":17,"files":[{"path":".learn/exercises/13-check-your-code/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/13-check-your-code/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719870859601,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:54:19.601Z","exit_code":0},{"starting_at":1719870895931,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T21:54:55.931Z","exit_code":0},{"starting_at":1719873225011,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T22:33:45.011Z","exit_code":0},{"starting_at":1719873233920,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T22:33:53.920Z","exit_code":0},{"starting_at":1719873260238,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T22:34:20.238Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1719870722538,"completed_at":1719873263940},{"slug":"14-goodbye","position":18,"files":[{"path":".learn/exercises/14-goodbye/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/14-goodbye/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1719873287077,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-07-01T22:34:47.077Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1719873263940,"completed_at":1719873331410}],"workout_session":[{"started_at":1719865689957,"ended_at":1719865816276},{"started_at":1719866083553,"ended_at":1719870895931},{"started_at":1719873057177,"ended_at":1719873331410},{"started_at":1719876366904}],"last_interaction_at":1719876385631,"user_id":10860}